#!/usr/bin/env -S uv run --script --quiet
"""Enable/disable wireless ADB debugging on Android devices."""
# /// script
# dependencies = [
#   "sh",
# ]
# ///


import argparse
import sys
import time
import sh


def enable_wireless():
    print("Enabling wireless debugging...")
    
    adb = sh.adb

    # Check if device is connected via USB
    devices_output = adb.devices()
    if "device" not in str(devices_output):
        print("Error: No devices connected via USB")
        sys.exit(1)

    # Get device IP using adb shell
    try:
        ip = adb.shell("ip route get 1.1.1.1").split("src")[1].split()[0].strip()
    except:
        try:
            ip = adb.shell("ip addr show wlan0 | grep 'inet ' | awk '{print $2}' | cut -d/ -f1").strip()
        except:
            print("Error: Could not get device IP address. Is WiFi connected?")
            sys.exit(1)
    
    if not ip:
        print("Error: Could not get device IP address. Is WiFi connected?")
        sys.exit(1)

    print(f"Device IP: {ip}")

    # Enable TCP mode on port 5555
    adb.tcpip("5555")
    print("Waiting for device to restart in TCP mode...")
    time.sleep(3)

    # Connect to device wirelessly
    try:
        result = adb.connect(f"{ip}:5555")
        
        if "connected" in str(result).lower():
            print(f"Connected to {ip}:5555")
            print("You can disconnect USB now.")
            
            # Verify connection
            devices_output = adb.devices()
            if f"{ip}:5555" in str(devices_output):
                print("✓ Wireless connection verified")
            else:
                print("⚠ Connection may not be stable")
        else:
            print(f"Failed to connect: {result}")
            sys.exit(1)
    except Exception as e:
        print(f"Failed to connect: {e}")
        sys.exit(1)


def disable_wireless():
    print("Disabling wireless debugging...")
    
    adb = sh.adb
    
    try:
        devices_output = str(adb.devices())
        if "device" not in devices_output:
            print("No devices connected")
            sys.exit(1)
        
        # Switch back to USB mode
        adb.usb()
        print("✓ Switched back to USB mode")
        
    except Exception as e:
        print(f"✗ Failed to disable wireless debugging: {e}")


def show_status():
    adb = sh.adb
    
    try:
        devices_output = str(adb.devices())
        print(devices_output)
        
        # Count wireless connections
        wireless_count = devices_output.count(':5555')
        if wireless_count > 0:
            print(f"Wireless connections: {wireless_count}")
        else:
            print("No wireless connections")
            
    except Exception as e:
        print(f"Error getting device status: {e}")


parser = argparse.ArgumentParser(description=__doc__.strip(), formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument("command", choices=["enable", "disable", "status"],
                   help="Command to execute")

args = parser.parse_args()

if args.command == "enable":
    enable_wireless()
elif args.command == "disable":
    disable_wireless()
elif args.command == "status":
    show_status()
