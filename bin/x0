#!/usr/bin/env -S uv run --script --quiet
# /// script
# dependencies = [
#     "requests>=2.32",
# ]
# ///

import sys
import os
import argparse
import requests

MAX_FILE_SIZE = 512 * 1024 * 1024  # 512 MiB

def upload_to_x0at(content, filename, id_length=None):
    if len(content) > MAX_FILE_SIZE:
        print(f"Error: File size ({len(content)} bytes) exceeds maximum allowed size (512 MiB)", file=sys.stderr)
        sys.exit(1)
    
    url = "https://x0.at/"
    
    files = {'file': (filename, content)}
    data = {}
    if id_length:
        data['id_length'] = str(id_length)
    
    response = requests.post(url, files=files, data=data)
    
    if response.status_code == 200:
        print(response.text.strip())
    else:
        print(f"Error: {response.status_code} {response.reason}", file=sys.stderr)
        print(response.text, file=sys.stderr)
        sys.exit(1)

parser = argparse.ArgumentParser(description="Upload files to x0.at")
parser.add_argument('file', nargs='?', help='File to upload (reads from stdin if not provided)')
parser.add_argument('-n', '--name', help='Specify a custom filename for the upload')
parser.add_argument('-l', '--id-length', type=int, help='Use a longer file ID (up to 24 characters)')

args = parser.parse_args()

if args.file:
    if not os.path.exists(args.file):
        print(f"Error: File '{args.file}' not found.", file=sys.stderr)
        sys.exit(1)
    with open(args.file, 'rb') as f:
        content = f.read()
    filename = args.name or os.path.basename(args.file)
else:
    content = sys.stdin.buffer.read()
    filename = args.name or "stdin.txt"

upload_to_x0at(content, filename, args.id_length)
