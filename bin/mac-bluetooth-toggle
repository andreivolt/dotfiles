#!/usr/bin/env ruby
require 'json'
require 'open3'

def toggle_connection(device_address, is_connected)
  if is_connected
    system('blueutil', '--disconnect', device_address)
  else
    system('blueutil', '--connect', device_address)
  end
end

paired_devices = JSON.parse(`blueutil --format json --paired`)
connected_devices = JSON.parse(`blueutil --format json --connected`)

connected_addresses = connected_devices.map { |device| device['address'] }

marked_devices = paired_devices.map do |device|
  prefix = connected_addresses.include?(device['address']) ? '✓ ' : '  '
  "#{prefix}#{device['name']} (#{device['address']})"
end

fzf_command = [
  'fzf', '--multi', '--height=~100%', '--min-height=0',
  '--header', 'Select devices to toggle (✓ = connected)',
  '--preview', 'echo {}',
  '--preview-window', 'up:3:hidden:wrap',
  '--bind', 'ctrl-/:toggle-preview',
  '--prompt', 'Toggle connection > '
]

selected_devices = nil

Open3.popen2(*fzf_command) do |stdin, stdout, _process|
  stdin.puts(marked_devices.join("\n"))
  stdin.close
  selected_devices = stdout.read.strip.split("\n")
end

selected_devices.each do |device|
  address = device.match(/\(([^)]+)\)/)[1]
  is_connected = device.start_with?('✓')
  toggle_connection(address, is_connected)
end