#!/usr/bin/env ruby

require 'optparse'
require 'json'
require 'open3'

options = { monitor: false }
OptionParser.new do |opts|
  opts.banner = "Usage: bh-play [options] [audiofile]"
  opts.on("-m", "--monitor", "Use BH-Monitor for output (speakers + BlackHole)") { options[:monitor] = true }
end.parse!

audio_path = ARGV[0]
output_name = options[:monitor] ? "BH-Monitor" : "BlackHole 2ch"

original_output_id = JSON.parse(`bunx macos-audio-devices output get --json`)["id"]
devices = JSON.parse(`bunx macos-audio-devices list --json`)
output_id = devices.find { |d| d["name"] == output_name }&.dig("id")
input_id = devices.find { |d| d["name"] == "BlackHole 2ch" }&.dig("id")

abort "Output device '#{output_name}' not found" unless output_id
abort "Input device 'BlackHole 2ch' not found" unless input_id

at_exit { system("bunx macos-audio-devices output set #{original_output_id}") }

system("bunx macos-audio-devices output set #{output_id}")
system("bunx macos-audio-devices input set #{input_id}")
system("osascript -e 'set volume input volume 100'")

device_list = `ffmpeg -f lavfi -i anullsrc=channel_layout=stereo:r=48000 -t 0.001 -f audiotoolbox -list_devices true - 2>&1`
device_index = device_list.scan(/\[AudioToolbox.*?\] \[(\d+)\].*#{output_name}/).flatten.first

$stderr.puts "Using device: #{output_name} with ffmpeg index: #{device_index}"

if audio_path
  exec("ffmpeg", "-re", "-i", audio_path,
       "-af", "loudnorm=I=-14:TP=-1.5:LRA=11,alimiter=limit=0.97:level=disabled",
       "-ac", "2", "-ar", "48000", "-f", "audiotoolbox", "-audio_device_index", device_index, "-")
else
  $stderr.puts "Routing system audio through #{output_name}. Press Ctrl+C to stop."
  sleep
end
