# reset to defaults
set -g @plugin 'hallazzang/tmux-reset'


# set -g @plugin 'thesast/tmux-transient-status'
# set -g @transient-status-delay 0
# set -g @transient-status-stall 10

# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g default-shell /run/current-system/sw/bin/zsh

# TODO: keep?
set -g default-terminal "${TERM}"

set -g automatic-rename on
set -g aggressive-resize on # don't resize all the windows to the smallest session, resize only the active window in the small session.
set -g base-index 1
set -g history-file ~/.tmux_history
set -g monitor-activity on
set -g renumber-windows on # renumber windows when a window is closed
set -g set-titles on # set terminal title
set -g allow-rename on
set -g wrap-search off

# for zen-mode.nvim
set -g allow-passthrough on

set -g mouse on
bind-key -n MouseDrag1Status swap-window -d -t= # drag reorder windows

unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix

# vim
set -s escape-time 0
# visual selection
unbind [
bind v copy-mode
# copy
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind-key C-M-s set-option -g status # toggle status line

# for vim autoread
set -g focus-events on

bind-key C-a last-window # toggle windows

bind-key C-j choose-tree
bind-key b break-pane -d

# status
set -g status-justify left
set -g status-left ""
set -g status-style bg=colour234 # dark gray
set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,} #{pane_title} "

set -g pane-border-status top
set -g pane-border-format " #P: #{pane_current_command} "
# set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?#{==:#{window_panes},1},off,top}"' # TODO
set-hook -g window-layout-changed 'if-shell -F "#{!=:#{window_panes},1}" "set-option -w pane-border-status top" ; if-shell -F "#{==:#{window_panes},1}" "set-option -w pane-border-status off"'

is_many="if [ #{window_panes} -eq 1 ]; then exit 1; fi"
set-hook -g window-linked 'if-shell "$is_many" "set-option -w pane-border-status top" "set-option -w pane-border-status off"'

set -g pane-active-border-style fg=color57
set -g pane-border-style fg=color236,bg=black
set -g status-style fg=color15,bg=black
set -g window-style bg=black
set -g window-status-style bg=color234,fg=color246
set -g window-status-current-style bg=color57,fg=black

set-option -g window-status-format " #I #{p10:#{=/10/…/:window_name}} "
set-option -g window-status-current-format " #I #{p10:#{=/10/…/:window_name}} "

# separator="#[fg=black]｜"
separator=" "
set -g window-status-separator $separator

# open new pane or window with the current directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

set -g status-left ""
set -g status-right ""
