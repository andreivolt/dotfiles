#!/usr/bin/env pip-run telethon docopt
"""Usage: tg-export <channel> --num=<count>"""
from telethon import TelegramClient, sync
import os
from docopt import docopt

def get_data_dir():
    xdg_state_home = os.environ.get("XDG_STATE_HOME")
    if xdg_state_home:
        base_dir = xdg_state_home
    else:
        home = os.path.expanduser("~")
        base_dir = os.path.join(home, ".local", "state")

    data_dir = os.path.join(base_dir, "tg-export")
    os.makedirs(data_dir, exist_ok=True)
    return data_dir

data_dir = get_data_dir()

def fetch_messages(api_id, api_hash, channel_name, num_messages):
    client = TelegramClient(os.path.join(data_dir, '_'), api_id, api_hash)

    async def main():
        await client.start()
        channel = await client.get_entity(channel_name)
        messages = await client.get_messages(channel, limit=num_messages)
        for message in messages:
            clean_message = message.text.replace('\n', ' ') if message.text else ''
            print(f"{message.date}: {clean_message}")

    with client:
        client.loop.run_until_complete(main())

if __name__ == "__main__":
    args = docopt(__doc__)
    API_ID = os.getenv('TELEGRAM_API_ID')
    API_HASH = os.getenv('TELEGRAM_API_HASH')
    channel = args['<channel>']
    count = int(args['--num'])
    fetch_messages(API_ID, API_HASH, channel, count)
