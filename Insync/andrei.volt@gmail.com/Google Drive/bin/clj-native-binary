#!/usr/bin/env cached-nix-shell
#!nix-shell -i bb -p graalvm-ce babashka clojure

(require '[clojure.java.io :as io]
         '[clojure.java.shell :refer [sh]]
         '[babashka.process :as p :refer [process]]
         '[cheshire.core :as json] ; only for eval in editor
         '[clojure.edn :as edn]
         '[clojure.string :as s]
         '[clojure.tools.cli :refer [parse-opts]])

(def cli-options
  [[nil "--extra-deps DEPS"
    :default "{}"]
   [nil "--entrypoint ENTRYPOINT"
    :validate [not-empty]]
   [nil "--java-reflection-classes classes" "for native-build reflection configuration"
    :default []
    :parse-fn #(s/split % #",")]])

(def opts (parse-opts *command-line-args* cli-options))

(defn usage! []
  (println "build native binaries for Clojure using GraalVM")
  (println)
  (println (:summary opts))
  (System/exit (if (some? (:errors opts)) 1 0)))

(if (some? (:errors opts))
  (usage!))

(let [{:keys [java-reflection-classes extra-deps entrypoint]} (:options opts)
      deps (as-> (-> (io/reader "deps.edn") java.io.PushbackReader. edn/read) _
             (:aliases _)
             (map val _)
             (mapcat :extra-deps _)
             (map (partial apply hash-map) _)
             (reduce merge _))
      f (-> (sh "mktemp") :out s/trim-newline)]
    (->> java-reflection-classes (map #(hash-map :name % :allPublicMethods true)) json/generate-string (spit f))
    (sh
      "clojure"
      "-Sdeps"
      (str {:paths ["src"]
            :deps (merge deps
                         (read-string extra-deps)
                         '{clj.native-image/clj.native-image
                           {:git/url "https://github.com/taylorwood/clj.native-image.git"
                            :sha "4604ae76855e09cdabc0a2ecc5a7de2cc5b775d6"}})})
      "-m" "clj.native-image"
      entrypoint
      "--enable-https"
      "--initialize-at-build-time"
      "-Dclojure.compiler.direct-linking=true"
      "--no-fallback"
      "--allow-incomplete-classpath"
      "--report-unsupported-elements-at-runtime"
      (str "-H:ReflectionConfigurationFiles=" f)))
