#!/usr/bin/env bash

toggle_connection() {
    local device_address="$1"
    local is_connected="$2"
    if [ "$is_connected" = "true" ]; then
        blueutil --disconnect "$device_address"
    else
        blueutil --connect "$device_address"
    fi
}

paired_devices=$(blueutil --format json --paired)
connected_devices=$(blueutil --format json --connected)

marked_devices=$(jq -n --argjson paired "$paired_devices" --argjson connected "$connected_devices" '
    $paired[] | . as $device |
    if ($connected | map(.address) | index($device.address)) then
        "✓ \($device.name) (\($device.address))"
    else
        "  \($device.name) (\($device.address))"
    end
' -r)

selected_devices=$(echo "$marked_devices" | fzf --multi --height=~100% --min-height=0 \
    --header "Select devices to toggle (✓ = connected)" \
    --preview 'echo {}' \
    --preview-window up:3:hidden:wrap \
    --bind 'ctrl-/:toggle-preview' \
    --prompt 'Toggle connection > ')

echo "$selected_devices" | while IFS= read -r device; do
    address=$(echo "$device" | sed -E 's/.*\(([^)]+)\)/\1/')
    is_connected=$(echo "$device" | grep -q "^✓" && echo "true" || echo "false")
    toggle_connection "$address" "$is_connected"
done
